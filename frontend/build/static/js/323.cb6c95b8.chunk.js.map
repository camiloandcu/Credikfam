{"version":3,"file":"static/js/323.cb6c95b8.chunk.js","mappings":"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","sources":["components/LoadingPage.jsx","components/credito/UpdateCredito.jsx","services/api.js","services/clienteService.js","services/creditoService.js","services/funcionarioService.js"],"sourcesContent":["import { CircularProgress } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst LoadingPage = () => {\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingPage;","import React, { useEffect, useState } from 'react';\r\nimport { getCreditoById, updateCredito } from '../../services/creditoService';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Container, TextField, Button, Typography, Autocomplete } from '@mui/material';\r\nimport { getClientes } from '../../services/clienteService';\r\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\r\nimport { getFuncionarios } from '../../services/funcionarioService';\r\nimport LoadingPage from '../LoadingPage';\r\nimport dayjs from 'dayjs';\r\n\r\nconst UpdateCredito = () => {\r\n    const { id } = useParams();\r\n    const [clientes, setClientes] = useState([]);\r\n    const [funcionarios, setFuncionarios] = useState([]);\r\n    const [credito, setCredito] = useState();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await updateCredito(parseInt(id), credito);\r\n        navigate('/creditos/pendientes');\r\n    };\r\n\r\n    const fetchCredito = async (id) => {\r\n        const response = await getCreditoById(parseInt(id));\r\n        setCredito(response.data);\r\n    };\r\n\r\n    const fetchClientes = async () => {\r\n        const response = await getClientes();\r\n        setClientes(response.data);\r\n    };\r\n\r\n    const fetchFuncionarios = async () => { \r\n        const response = await getFuncionarios();\r\n        setFuncionarios(response.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCredito(id);\r\n        fetchFuncionarios();\r\n        fetchClientes();\r\n    }, [id]);\r\n\r\n    if (!clientes || !funcionarios || !credito) return <LoadingPage />;\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <Container>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Actualizar crédito\r\n                </Typography>\r\n                <form onSubmit={handleSubmit}>    \r\n                    <DatePicker\r\n                        label=\"Fecha\"\r\n                        fullWidth\r\n                        value={dayjs(credito.fechaInicio)}\r\n                        onChange={(date) => setCredito({ ...credito, fechaInicio: date })}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Autocomplete\r\n                        options={clientes}\r\n                        defaultValue={credito.cliente}\r\n                        getOptionLabel={(option) => `${option.nombre} ${option.apellido}`}\r\n                        placeholder = {\"The value that you want to set as preselected\"}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Cliente\" variant=\"outlined\" margin=\"normal\"/>}\r\n                        onChange={(event, newValue) => {\r\n                            setCredito({ ...credito, cliente: { id: newValue ? newValue.id : '' } }); \r\n                        }}\r\n                    />\r\n                    <Autocomplete\r\n                        options={funcionarios}\r\n                        defaultValue={credito.funcionario}\r\n                        getOptionLabel={(option) => `${option.nombre} ${option.apellido}`}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Funcionario\" variant=\"outlined\" margin=\"normal\"/>}\r\n                        onChange={(event, newValue) => {\r\n                            setCredito({ ...credito, funcionario: { id: newValue ? newValue.id : '' } }); \r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        label=\"Razon del crédito\"\r\n                        fullWidth\r\n                        value={credito.razonCredito}\r\n                        onChange={(e) => setCredito({ ...credito, razonCredito: e.target.value })}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Monto solicitado\"\r\n                        inputProps={{ type: 'number'}}\r\n                        fullWidth\r\n                        value={credito.montoSolicitado}\r\n                        onChange={(e) => setCredito({ ...credito, montoSolicitado: e.target.value })}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Cuotas\"\r\n                        inputProps={{ type: 'number'}}\r\n                        fullWidth\r\n                        value={credito.cuotas}\r\n                        onChange={(e) => setCredito({ ...credito, cuotas: e.target.value })}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        Enviar\r\n                    </Button>\r\n                </form>\r\n            </Container>\r\n        </LocalizationProvider>\r\n    );\r\n};\r\n\r\nexport default UpdateCredito;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://138.197.86.232:8080', \r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport default api;","import api from './api';\r\n\r\nexport const getClientes = () => api.get('/clientes');\r\nexport const getClienteById = (id) => api.get(`/clientes/${id}`);\r\nexport const createCliente = (cliente) => api.post('/clientes', cliente);\r\nexport const updateCliente = (id, cliente) => api.put(`/clientes/${id}`, cliente);\r\nexport const deleteCliente = (id) => api.delete(`/clientes/${id}`);","import api from './api';\r\n\r\nexport const getCreditos = () => api.get('/creditos');\r\nexport const getCreditosAprobados = () => api.get('/creditos/aprobado/True');\r\nexport const getCreditosPendientes = () => api.get('/creditos/aprobado/False');\r\nexport const getCreditoById = (id) => api.get(`/creditos/${id}`);\r\nexport const createCredito = (credito) => api.post('/creditos', credito);\r\nexport const updateCredito = (id, credito) => api.put(`/creditos/${id}`, credito);\r\nexport const aprobarCredito = (id) => api.put(`/creditos/${id}/aprobar`);\r\nexport const deleteCredito = (id) => api.delete(`/creditos/${id}`);","import api from './api';\r\n\r\nexport const getFuncionarios = () => api.get('/funcionarios');\r\nexport const getFuncionarioById = (id) => api.get(`/funcionarios/${id}`);\r\nexport const createFuncionario = (funcionario) => api.post('/funcionarios', funcionario);\r\nexport const updateFuncionario = (id, funcionario) => api.put(`/funcionarios/${id}`, funcionario);\r\nexport const deleteFuncionario = (id) => api.delete(`/funcionarios/${id}`);"],"names":["LoadingPage","_jsx","style","display","justifyContent","alignItems","height","children","CircularProgress","UpdateCredito","id","useParams","clientes","setClientes","useState","funcionarios","setFuncionarios","credito","setCredito","navigate","useNavigate","useEffect","async","response","getCreditoById","parseInt","data","fetchCredito","getFuncionarios","fetchFuncionarios","getClientes","fetchClientes","LocalizationProvider","dateAdapter","AdapterDayjs","_jsxs","Container","Typography","variant","gutterBottom","onSubmit","e","preventDefault","updateCredito","DatePicker","label","fullWidth","value","dayjs","fechaInicio","onChange","date","margin","Autocomplete","options","defaultValue","cliente","getOptionLabel","option","concat","nombre","apellido","placeholder","width","renderInput","params","TextField","event","newValue","funcionario","razonCredito","target","inputProps","type","montoSolicitado","cuotas","Button","color","axios","create","baseURL","headers","api","get","getClienteById","createCliente","post","updateCliente","put","deleteCliente","delete","getCreditosAprobados","getCreditosPendientes","createCredito","aprobarCredito","deleteCredito","getFuncionarioById","createFuncionario","updateFuncionario","deleteFuncionario"],"sourceRoot":""}